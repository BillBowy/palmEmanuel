// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
  "name": "PowerShell Binary Module",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/dotnet:0-7.0",
  "features": {
    "ghcr.io/devcontainers/features/powershell:1": {
      "version": "latest"
    }
  },
  "customizations": {
    "extensions": [
      "justin-grote.powershell-extension-pack",
      "josefpihrt-vscode.roslynator", //This also installs the C# extension. We cant specify them both because it leads to a race condition currently due to bug in codespaces loading
      "adrianwilczynski.namespace",
      "kreativ-software.csharpextensions"
    ],
    "settings": {
      "[csharp]": {
        "editor.defaultFormatter": "ms-dotnettools.csharp",
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "modificationsIfAvailable",
        "editor.formatOnType": true,
        "editor.wordBasedSuggestions": false
      },
      "csharp.inlayHints.parameters.enabled": true,
      "csharp.inlayHints.parameters.forIndexerParameters": true,
      "csharp.inlayHints.parameters.forLiteralParameters": true,
      "csharp.inlayHints.parameters.forObjectCreationParameters": true,
      "csharp.inlayHints.parameters.forOtherParameters": true,
      "csharp.inlayHints.types.enabled": true,
      "csharp.inlayHints.types.forImplicitObjectCreation": true,
      "csharp.inlayHints.types.forImplicitVariableTypes": true,
      "csharp.inlayHints.types.forLambdaParameterTypes": true,
      "csharp.semanticHighlighting.enabled": true,
      "omnisharp.enableImportCompletion": true,
      "omnisharp.enableRoslynAnalyzers": true,
      "omnisharp.organizeImportsOnFormat": true,
      "omnisharp.useModernNet": true,
      "extensions.ignoreRecommendations": true, // Suppresses a message about PowerShell stable because we use preview
      "terminal.integrated.profiles.linux": {
        "pwsh": {
          "path": "pwsh",
          "args": [
            "-nologo"
          ],
          "icon": "terminal-powershell"
        }
      }
    }
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "dotnet restore",
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
  }
}
